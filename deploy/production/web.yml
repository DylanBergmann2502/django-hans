# deploy/production/web.yml
name: django_hans_production

volumes:
  staticfiles: {}
  postgres_data: {}
  postgres_data_backups: {}
  redis_data: {}

services:
  # Web
  django:
    build:
      context: ../..
      dockerfile: ./deploy/production/compose/django/Dockerfile
    image: django
    container_name: django
    restart: always
    volumes:
      - type: bind
        source: ../..
        target: /app
      - type: volume
        source: staticfiles
        target: /app/staticfiles
    depends_on:
      - postgres
      - redis
    env_file:
      - ./.envs/.django
    command: /start

  nginx:
    build:
      context: ../..
      dockerfile: ./deploy/production/compose/nginx/Dockerfile
    image: nginx
    container_name: nginx
    restart: always
    volumes:
      - staticfiles:/usr/share/nginx/html/django-static:ro
    depends_on:
      - django
      - flower
    ports:
      - "80:80"

  postgres:
    build:
      context: ../..
      dockerfile: ./deploy/production/compose/postgres/Dockerfile
    image: postgres
    container_name: postgres
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - postgres_data_backups:/backups
    env_file:
      - ./.envs/.postgres

  # AWS CLI for backups
  aws_cli:
    build:
      context: ../..
      dockerfile: ./deploy/production/compose/aws/Dockerfile
    image: aws_cli
    container_name: aws_cli
    env_file:
      - ./.envs/.django
    volumes:
      - postgres_data_backups:/backups:z

  # Worker
  redis:
    image: docker.io/redis:6
    container_name: redis
    restart: always
    volumes:
      - redis_data:/data

  celery_worker:
    build:
      context: ../..
      dockerfile: ./deploy/production/compose/django/Dockerfile
    image: celery_worker
    container_name: celery_worker
    restart: always
    depends_on:
      - postgres
      - redis
    env_file:
      - ./.envs/.django
    command: /start-celery-worker

  celery_beat:
    build:
      context: ../..
      dockerfile: ./deploy/production/compose/django/Dockerfile
    image: celery_beat
    container_name: celery_beat
    restart: always
    depends_on:
      - postgres
      - redis
    env_file:
      - ./.envs/.django
    command: /start-celery-beat

  flower:
    build:
      context: ../..
      dockerfile: ./deploy/production/compose/django/Dockerfile
    image: flower
    container_name: flower
    restart: always
    depends_on:
      - postgres
      - redis
    env_file:
      - ./.envs/.django
    command: /start-flower
