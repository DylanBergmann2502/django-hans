# .github/workflows/ci.yml
name: CI

# Enable Buildkit and let compose use it to speed up image building
env:
  DOCKER_BUILDKIT: 1
  COMPOSE_DOCKER_CLI_BUILD: 1

on:
  pull_request:
    branches: ['master', 'main']
    paths-ignore: ['docs/**']
  push:
    branches: ['master', 'main']
    paths-ignore: ['docs/**']

concurrency:
  group: ${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  # Backend code quality checks
  backend-code-quality:
    name: Backend Code Quality
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code Repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version-file: '.python-version'

      - name: Run pre-commit
        uses: pre-commit/action@v3.0.1

  # Backend tests
  backend-tests:
    name: Backend Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code Repository
        uses: actions/checkout@v4

      - name: Build the Django container
        run: docker compose -f deploy/local/web.yml build django

      - name: Start PostgreSQL
        run: docker compose -f deploy/local/web.yml up -d postgres

      - name: Wait for PostgreSQL to be ready
        run: sleep 10

      - name: Check DB Migrations
        run: docker compose -f deploy/local/web.yml run --rm django python manage.py makemigrations --check

      - name: Run DB Migrations
        run: docker compose -f deploy/local/web.yml run --rm django python manage.py migrate

      - name: Run Django Tests
        run: docker compose -f deploy/local/web.yml run --rm django pytest

      - name: Tear down the Stack
        run: docker compose -f deploy/local/web.yml down -v

  # Frontend code quality checks
  frontend-code-quality:
    name: Frontend Code Quality
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code Repository
        uses: actions/checkout@v4

      - name: Build the Vue container
        run: docker compose -f deploy/local/web.yml build vue

      - name: Format frontend
        run: docker compose -f deploy/local/web.yml run --rm vue npm run format

      - name: Lint frontend
        run: docker compose -f deploy/local/web.yml run --rm vue npm run lint

      - name: Tear down Vue container
        run: docker compose -f deploy/local/web.yml rm -f vue

  # Frontend tests
  frontend-tests:
    name: Frontend Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code Repository
        uses: actions/checkout@v4

      - name: Build the Vue container
        run: docker compose -f deploy/local/web.yml build vue

      - name: Run Vue unit tests
        run: docker compose -f deploy/local/web.yml run --rm vue npm run test:unit

      - name: Tear down Vue container
        run: docker compose -f deploy/local/web.yml rm -f vue

  # Build check
  build:
    name: Build Check
    runs-on: ubuntu-latest
    needs: [backend-code-quality, backend-tests, frontend-code-quality, frontend-tests]
    steps:
      - name: Checkout Code Repository
        uses: actions/checkout@v4

      - name: Build Django container
        run: docker compose -f deploy/local/web.yml build django

      - name: Build Vue frontend
        run: docker compose -f deploy/local/web.yml build vue

      - name: Build frontend production artifacts
        run: docker compose -f deploy/local/web.yml run --rm vue npm run build

      - name: Check if build artifacts were created
        run: docker compose -f deploy/local/web.yml run --rm vue ls -la dist/

      - name: Tear down containers
        run: docker compose -f deploy/local/web.yml down
